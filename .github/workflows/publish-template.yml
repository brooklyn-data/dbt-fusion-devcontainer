name: Publish Template

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'README.md'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'README.md'
  workflow_dispatch:

jobs:
  publish-staging:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push staging template
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./src/dbt-fusion/.devcontainer/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/dbt-fusion:pr-${{ github.event.pull_request.number }}
            ghcr.io/${{ github.repository }}/dbt-fusion:staging 
  
  publish:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push template
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./src/dbt-fusion/.devcontainer/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}/dbt-fusion:latest

  cleanup-pr-images:
    if: github.event.action == 'closed' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete PR-specific image
        run: |
          # Delete PR-specific tag
          docker run --rm \
            -e GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} \
            -e PACKAGE_NAME=dbt-fusion \
            -e PACKAGE_TYPE=container \
            -e PACKAGE_OWNER=${{ github.repository_owner }} \
            -e PACKAGE_VERSION=pr-${{ github.event.pull_request.number }} \
            ghcr.io/actions/github-script@v6 || echo "PR image not found, skipping..."
          
          # Delete staging tag
          docker run --rm \
            -e GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} \
            -e PACKAGE_NAME=dbt-fusion \
            -e PACKAGE_TYPE=container \
            -e PACKAGE_OWNER=${{ github.repository_owner }} \
            -e PACKAGE_VERSION=staging \
            ghcr.io/actions/github-script@v6 || echo "Staging image not found, skipping..."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
